sp_r56rp_air_revolving_cannon = {
	specialization = specialization_air 	
	icon = GFX_sp_r56rp_air_revolving_cannon

	project_tags = {
		sp_tag_aircraft
	}

	allowed = {
		#has_dlc = "Gotterdammerung"	
	}

	available = {
		FROM = {
			has_tech = aa_cannon_3
		}
	}

	breakthrough_cost = {
		specialization_air = 2
	}

	resource_cost = {
		resources = {
			aluminium = 12
			steel = 8
			tungsten = 4
		}
	}
	
	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {
		country_effects = {
		}		

		#enable_equipments = {
		#	helicopter_equipment_1 
		#}

		#enable_subunits = { 
		#	helicopter_brigade
		#}

		enable_equipment_modules = {
			r56rp_aircraft_cannon_3_1x
			r56rp_aircraft_cannon_3_2x
		}
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}

	#unique_prototype_rewards = {
	#
	#}
}

sp_r56rp_air_afterburning_jet_engine = {
	specialization = specialization_air 	
	icon = GFX_sp_r56rp_air_afterburning_jet_engine

	project_tags = {
		sp_tag_aircraft
		sp_tag_jet
	}

	special_project_parent = {
		sp_air_axial_jet_engine
	}
	
	breakthrough_cost = {
		specialization_air = 2
	}

	resource_cost = {
		resources = {
			chromium = 24
			aluminium = 10
			steel = 4
		}
	}

	prototype_time = sp_time.prototype.long

	complexity = sp_complexity.large

	project_output = {
		country_effects = {
			if = {
				limit = { has_dlc = "By Blood Alone" }
						
				add_design_template_bonus = {
					name = air_equipment
					uses = 1
					cost_factor = 0.75
					equipment = medium_plane_airframe
					equipment = small_plane_airframe
					equipment = large_plane_airframe
				}			
			}
			else = {
				add_equipment_bonus = {
					name = sp_air_axial_jet_engine
					bonus = {
						medium_plane_airframe = {
							air_agility = 0.05
							maximum_speed = 0.15
							air_range = 0.1
							instant = yes
						}
					}
				}
				add_equipment_bonus = {
					name = sp_air_axial_jet_engine
					bonus = {
						small_plane_airframe = {
							air_agility = 0.05
							maximum_speed = 0.15
							air_range = 0.1
							instant = yes
						}
					}
				}
				add_equipment_bonus = {
					name = sp_air_axial_jet_engine
					bonus = {
						large_plane_airframe = {
							air_agility = 0.05
							maximum_speed = 0.15
							air_range = 0.1
							instant = yes
						}
					}
				}									
			}	
		}		

		enable_equipment_modules = {
			limit = { has_dlc = "By Blood Alone"}
			jet_engine_1x_3
			jet_engine_2x_3
			jet_engine_3x_3
			jet_engine_4x_3
			jet_engine_6x_3
		}
	}

	generic_prototype_rewards = {
		sp_air_political_interference_generic_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}

}

sp_r56rp_automatic_gun_laying_turret = {
	specialization = specialization_air 	
	icon = GFX_sp_r56rp_automatic_gun_laying_turret

	project_tags = {
		sp_tag_aircraft
	}

	allowed = {
		#has_dlc = "Gotterdammerung"	
	}

	available = {
		FROM = {
			has_tech = centimetric_radar
			OR = {
				has_tech = aa_cannon_3
				has_tech = r56rp_aa_hmg_2
			}
		}
	}

	breakthrough_cost = {
		specialization_air = 1
	}

	resource_cost = {
		resources = {
			aluminium = 12
			tungsten = 4
			chromium = 2
		}
	}
	
	prototype_time = sp_time.prototype.short

	complexity = sp_complexity.short

	project_output = {
		country_effects = {
		}		

		#enable_equipments = {
		#	helicopter_equipment_1 
		#}

		#enable_subunits = { 
		#	helicopter_brigade
		#}

		enable_equipment_modules = {
			r56rp_hmg_aglt_turret_x1
		}
	}

	generic_prototype_rewards = {
		sp_air_scientist_xp_generic_reward
		sp_air_political_interference_generic_reward
		sp_air_generic_major_breakthrough_reward
		sp_air_generic_aerodynamics_advancements_reward
		sp_air_generic_reward_scientist_xp_1
		sp_air_generic_reward_scientist_xp_2
		sp_air_generic_reward_scientist_xp_3
		sp_air_generic_reward_air_xp_1
		sp_air_generic_reward_air_xp_2
		sp_air_generic_reward_air_xp_3
		sp_air_generic_reward_major_progress_1
		sp_air_generic_reward_major_progress_2
		sp_air_generic_reward_major_progress_3
		sp_air_generic_reward_test_failure_1
		sp_air_generic_reward_test_failure_2
		sp_air_generic_reward_test_failure_3		
	}

	#unique_prototype_rewards = {
	#
	#}
}